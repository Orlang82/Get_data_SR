import os
import shutil
import sys
import time
from datetime import datetime
from pathlib import Path
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler
from winotify import Notification, audio

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
# WATCH_DIR = r"q:\STAT\new_stat\STA_ARCH\ARX_F01\2025"
WATCH_DIR = r"r:\–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è\–†–ò–°–ö-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç\–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ\3 - –†–ò–°–ö –õ–ò–ö–í–ò–î–ù–û–°–¢–ò\1 - –ë–ê–õ–ê–ù–°\test"
# DEST_BASE = r"r:\–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è\–†–ò–°–ö-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç\–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ\3 - –†–ò–°–ö –õ–ò–ö–í–ò–î–ù–û–°–¢–ò\1 - –ë–ê–õ–ê–ù–°"
DEST_BASE = r"r:\–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è\–†–ò–°–ö-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç\–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ\3 - –†–ò–°–ö –õ–ò–ö–í–ò–î–ù–û–°–¢–ò\1 - –ë–ê–õ–ê–ù–°\out"
MAX_DEPTH = 5  # –≥–ª—É–±–∏–Ω–∞ —Å–ª–µ–∂–µ–Ω–∏—è
ICON_PATH = r"r:\–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è\–†–ò–°–ö-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç\–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ\3 - –†–ò–°–ö –õ–ò–ö–í–ò–î–ù–û–°–¢–ò\1 - –ë–ê–õ–ê–ù–°\–°–ö–†–ò–ü–¢–´\PyScripts\Get_data_SR\watcher\icon.ico"  # –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å .ico, .png –∏–ª–∏ DLL —Å –∏–∫–æ–Ω–∫–∞–º–∏

# === –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ Windows 10/11 ===
def show_notification(file_name):
    toast = Notification(
        app_id="Stat Watcher",
        title="üìä –ù–æ–≤—ã–π —Ñ–∞–π–ª STAT",
        msg=file_name,
        icon=ICON_PATH
    )
    toast.set_audio(audio.Default, loop=False)
    toast.show()
    time.sleep(2)  # –Ω–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞, —á—Ç–æ–±—ã —Ç–æ—Å—Ç —É—Å–ø–µ–ª –ø–æ–∫–∞–∑–∞—Ç—å—Å—è

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π ===
class StatFileHandler(FileSystemEventHandler):
    def process_file(self, file_path: Path):
        file_name = file_path.name.lower()

        if (file_name.startswith("01x") and file_name.endswith(".xlsx")) or file_name.startswith("–Ω–æ—Ä–º"):
            show_notification(file_path.name)

            today_str = datetime.now().strftime("%d-%m-%Y")
            dest_dir = Path(DEST_BASE) / today_str
            dest_dir.mkdir(parents=True, exist_ok=True)

            try:
                shutil.copy2(file_path, dest_dir / file_path.name)
                print(f"[INFO] –§–∞–π–ª {file_path.name} —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ {dest_dir}")
            except Exception as e:
                print(f"[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å {file_path.name}: {e}")

    def on_created(self, event):
        if not event.is_directory:
            self.process_file(Path(event.src_path))

    def on_modified(self, event):
        if not event.is_directory:
            self.process_file(Path(event.src_path))

# === –ó–∞–ø—É—Å–∫ —Å–ª–µ–∂–µ–Ω–∏—è ===
def start_watching():
    event_handler = StatFileHandler()
    observer = Observer()

    for root, dirs, _ in os.walk(WATCH_DIR):
        depth = Path(root).relative_to(WATCH_DIR).parts
        if len(depth) <= MAX_DEPTH:
            observer.schedule(event_handler, root, recursive=False)

    observer.start()
    print(f"[INFO] –°–ª–µ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –∑–∞ {WATCH_DIR} (–≥–ª—É–±–∏–Ω–∞ {MAX_DEPTH})")

    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        observer.stop()
    observer.join()

if __name__ == "__main__":
    # –°–∫—Ä—ã—Ç–∏–µ –∫–æ–Ω—Å–æ–ª–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏–∑ exe
    if getattr(sys, 'frozen', False):
        import ctypes
        ctypes.windll.user32.ShowWindow(ctypes.windll.kernel32.GetConsoleWindow(), 0)
    start_watching()
