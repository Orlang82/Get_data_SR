/*Сравнение остатков по счетам на 2 даты*/
WITH PARAMS AS (
  SELECT 
    TO_DATE(:date_param_old, 'DD.MM.YYYY') AS START_DATE, --<<-- Начальная дата
    TO_DATE(:date_param, 'DD.MM.YYYY') AS END_DATE    --<<-- Конечная дата
  FROM DUAL
),
BASE_DATA AS (
  SELECT 
    SUBSTR(A.ACCOUNT_NUMBER, 1, 4) AS R020,
    TO_DATE(P.START_DATE, 'DD.MM.YY') || ' / ' || TO_DATE(P.END_DATE, 'DD.MM.YY') AS DIFF_DATE,
    C.CODE AS CL_CODE,
    C.SHORT_NAME AS NAME_CL,
    A.ACCOUNT_NUMBER,
    A.AMOUNT_TYPE AS AP,
    TRUNC(ACS.SNAPSHOT_DATE, 'DD') AS SNAP_DATE,
    CUR.SHORT_NAME AS CUR,
    A.NAME AS NAME_ACC,
    SUM(ACS.AMOUNT) AS SUM_CUR,
    SUM(ACS.BASE_AMOUNT) AS SUM_UAH
  FROM SR_BANK.ACCOUNT A
    LEFT JOIN SR_BANK.CURRENCY CUR ON CUR.ID = A.CURRENCY_ID
    LEFT JOIN SR_BANK.CUSTOMER C ON C.ID = A.CUSTOMER_ID
    LEFT JOIN SR_BANK.ACCOUNT_SNAPSHOT ACS ON ACS.ACCOUNT_ID = A.ID   	   
    CROSS JOIN PARAMS P
  WHERE 1=1 
  	/*Только открытые счета*/
--  	AND A.IS_OPEN = 'T'
  	
  /*Остаток не равен 0*/
    AND :over_param
        
	/*Счета по R020*/
    AND SUBSTR(A.ACCOUNT_NUMBER, 1, 4) IN (:date_r020)
--    AND SUBSTR(A.ACCOUNT_NUMBER, 1, 4) LIKE '32%'
    
    /*Счет по номеру*/
--    AND A.ACCOUNT_NUMBER IN (18116100000033)
    
    /*Активность*/
--    AND A.AMOUNT_TYPE = 'P'
        
    /*Валюта*/
--    AND CUR.SHORT_NAME IN ('USD')
--    AND CUR.SHORT_NAME <> 'UAH'
    
    /*Клиент*/
--    AND C.CODE = '10951'
    
    AND TRUNC(ACS.SNAPSHOT_DATE, 'DD') >= P.START_DATE AND TRUNC(ACS.SNAPSHOT_DATE, 'DD') <= P.END_DATE 
  GROUP BY 
    SUBSTR(A.ACCOUNT_NUMBER, 1, 4),
    TO_DATE(P.START_DATE, 'DD.MM.YY') || ' / ' || TO_DATE(P.END_DATE, 'DD.MM.YY'),
    C.CODE,
    C.SHORT_NAME,
    A.ACCOUNT_NUMBER,
    A.AMOUNT_TYPE,
    CUR.SHORT_NAME,
    A.NAME,
    TRUNC(ACS.SNAPSHOT_DATE, 'DD')
)
SELECT
  R020,
  DIFF_DATE,
  CL_CODE,
  NAME_CL,
  ACCOUNT_NUMBER,
  AP,
  CUR,
  NAME_ACC,
  NVL(MAX(CASE WHEN SNAP_DATE = P.START_DATE THEN SUM_CUR END), 0) AS OLD_CUR,
  NVL(MAX(CASE WHEN SNAP_DATE = P.END_DATE THEN SUM_CUR END), 0) AS ACTUAL_CUR,
  NVL(MAX(CASE WHEN SNAP_DATE = P.END_DATE THEN SUM_CUR END), 0) 
    - NVL(MAX(CASE WHEN SNAP_DATE = P.START_DATE THEN SUM_CUR END), 0) AS DIFF_CUR,
  NVL(MAX(CASE WHEN SNAP_DATE = P.START_DATE THEN SUM_UAH END), 0) AS OLD_UAH,
  NVL(MAX(CASE WHEN SNAP_DATE = P.END_DATE THEN SUM_UAH END), 0) AS ACTUAL_UAH,
  NVL(MAX(CASE WHEN SNAP_DATE = P.END_DATE THEN SUM_UAH END), 0) 
    - NVL(MAX(CASE WHEN SNAP_DATE = P.START_DATE THEN SUM_UAH END), 0) AS DIFF_UAH
FROM BASE_DATA, PARAMS P
GROUP BY R020, DIFF_DATE, CL_CODE, NAME_CL, ACCOUNT_NUMBER, AP, CUR, NAME_ACC
ORDER BY R020, DIFF_UAH DESC
